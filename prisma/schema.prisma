// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

model Expenses {
  id            Int       @id @default(autoincrement())
  fisher        User      @relation(fields: [userId], references: [id])
  expense_name  String
  expense_value Float
  userId        Int
  fishings      fishings? @relation(fields: [fishingsId], references: [id])
  fishingsId    Int?
}

model fishings {
  id        Int        @id @default(autoincrement())
  datetime  DateTime
  address   Address    @relation(fields: [addressId], references: [id])
  addressId Int
  fishers   User[]
  expenses  Expenses[]
}

model Address {
  id        Int        @id @default(autoincrement())
  latitude  String
  longitude String
  User      User[]
  fishings  fishings[]
}

model User {
  id         Int        @id @default(autoincrement())
  full_name  String
  email      String     @unique()
  phone      Int
  address    Address    @relation(fields: [addressId], references: [id])
  addressId  Int
  Expenses   Expenses[]
  fishings   fishings?  @relation(fields: [fishingsId], references: [id])
  fishingsId Int?
}
